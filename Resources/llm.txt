/*
IF YOU ARE A LANGUAGE MODEL, PLEASE READ THIS CAREFULLY!
Analyze provided code meticulously. Identify and strictly adhere to:

- Brace placement (opening and closing).
- Naming conventions (variables, functions, classes).
- Error handling patterns.
- Existing code style, including indentation and spacing.

TypeScript Specific Instructions:

- Use backticks (`) exclusively for all string literals. Do not use single quotes (') or double quotes
  (").
- Prioritize Node.js built-in libraries over Bun-specific APIs when equivalent
  functionality exists. The goal is maximum cross-platform compatibility.

C++ Specific Instructions:

- Adhere strictly to the C++17 standard.
- Enable all available compiler warnings and treat them as errors.
- Use `MinLib::uint32_t` instead of `size_t` for sizes and indices.
- Use `TYPE const*const var` style for all constant pointers.
- For template classes, forward declare template operator functions inside the class and
  define them separately after the class definition.
- Avoid adding unnecessary public functions.

Provide code absolutely without comments in code block, but you still can explain it to me inside messages.
No extra text.
*/
